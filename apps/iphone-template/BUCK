load("//config:utils.bzl",
    "library_configs",
)

load("//Config:configs.bzl",
    "app_binary_configs",
    "info_plist_substitutions",
    "app_info_plist_substitutions",
    "DEVELOPMENT_LANGUAGE",
)

load("//config:buck_rule_macros.bzl",
    "framework_binary_dependencies",
    "framework_bundle_dependencies",
    "apple_test_lib",
    "apple_test_all",
)

additional_frameworks = []

framework_dependencies = [
    "//libraries/EsoftUIKit:EsoftUIKit",
]

resource_dependencies = [
	":LaunchScreen",
	":Icons",
]

build_phase_scripts = []

app_tests = [
    ":UnitTests",
    ":UnitTestsWithHostApp",
]

appTargetName = "TemplateApp"

apple_asset_catalog(
  name = "Icons",
  dirs = [
    "Resources/Assets.xcassets",
  ],
  app_icon = "AppIcon",
  visibility = ["PUBLIC"],
)

apple_resource(
    name = "LaunchScreen",
    files = [
        "Resources/Base.lproj/LaunchScreen.storyboard",
    ],
    visibility = ["PUBLIC"],
)

apple_library(
    name = "AppLibrary",
    visibility = [
        "//apps/iphone-template:",
        "//apps/iphone-template/...",
        "//apps/...",
    ],
    tests = app_tests,
    configs = library_configs(),
    swift_version = native.read_config("swift", "version"),
    srcs = glob([ "Sources/**/*.swift" ]),
    deps = [] + framework_binary_dependencies(framework_dependencies),
    frameworks = additional_frameworks,
)

apple_binary(
    name = "AppBinary",
    visibility = [
        "//apps/iphone-template:",
        "//apps/iphone-template/...",
        "//apps/...",
    ],
    preprocessor_flags=[
        '-fobjc-arc',
        '-Wno-objc-designated-initializers',
    ],
    configs = app_binary_configs(appTargetName),
    swift_version = native.read_config("swift", "version"),
    srcs = [
        "BuckSupport/Empty.swift",
    ],
    deps = [
        ":AppLibrary",
    ]
    + resource_dependencies,
)

apple_bundle(
    name = appTargetName,
    visibility = [
        "//apps/iphone-template:",
    ],
    extension = "app",
    binary = ":AppBinary",
    product_name = appTargetName,
    info_plist = "Info.plist",
    info_plist_substitutions = app_info_plist_substitutions(appTargetName),
    deps = []
    + framework_bundle_dependencies(framework_dependencies),
)

apple_package(
    name = "AppPackage",
    bundle = ":%s" % appTargetName,
)

xcode_workspace_config(
    name = "workspace",
    workspace_name = "%s_Buck"% appTargetName,
    src_target = ":%s" % appTargetName,
)

apple_test_lib(
    name = "UnitTests",
    srcs = glob([
        "UnitTests/*.swift",
    ]),
    deps = [
        ":AppLibrary",
    ] + framework_binary_dependencies(framework_dependencies),
    frameworks = [] + additional_frameworks,
    linker_flags = [
        "-Xlinker",
        "-rpath",
        "-Xlinker",
        "/usr/lib/swift",
        "-Xlinker",
        "-rpath",
        "-Xlinker",
        "@executable_path/../../Frameworks",
    ],
    info_plist_substitutions = info_plist_substitutions("UnitTests")
)

apple_test_lib(
    name = "UnitTestsWithHostApp",
    run_test_separately = True,
    test_host_app = ":%s" % appTargetName,
    srcs = glob([
        "UnitTestsWithHostApp/*.swift",
    ]),
    deps = [
        ":AppLibrary",
    ],
    linker_flags = [
        "-Xlinker",
        "-rpath",
        "-Xlinker",
        "/usr/lib/swift",
        "-Xlinker",
        "-rpath",
        "-Xlinker",
        "@executable_path/../../Frameworks",
    ],
    info_plist_substitutions = info_plist_substitutions("UnitTestsWithHostApp")
)

apple_test_all(
    name = "%sCITests"% appTargetName,
    libraries = [],
    additional_tests = app_tests,
    prebuilt_frameworks = [] + framework_bundle_dependencies(framework_dependencies),
    linker_flags = [
        "-Xlinker",
        "-rpath",
        "-Xlinker",
        "/usr/lib/swift",
        "-Xlinker",
        "-rpath",
        "-Xlinker",
        "@executable_path/../../Frameworks",
    ],
    info_plist_substitutions = app_info_plist_substitutions("%sCITests"% appTargetName),
)